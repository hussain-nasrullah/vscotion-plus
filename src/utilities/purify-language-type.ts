import { NotionSupportedLanguages } from "../components/notion/types/notion-supported-languages";

export function purifyLanguageType(language: string): NotionSupportedLanguages {
  switch (language) {
    case "abap":
      return "abap";
    case "arduino":
      return "arduino";
    case "shellscript":
    case "bash":
      return "bash";
    case "basic":
      return "basic";
    case "c":
    case "objective-c":
    case "java/c/c++/c#":
      return "c";
    case "clojure":
      return "clojure";
    case "coffeescript":
      return "coffeescript";
    case "cpp":
      return "c++";
    case "csharp":
      return "c#";
    case "css":
      return "css";
    case "dart":
      return "dart";
    case "diff":
      return "diff";
    case "dockerfile":
      return "docker";
    case "elixir":
      return "elixir";
    case "elm":
      return "elm";
    case "erlang":
      return "erlang";
    case "flow":
      return "flow";
    case "fortran":
      return "fortran";
    case "fsharp":
      return "f#";
    case "gherkin":
      return "gherkin";
    case "glsl":
      return "glsl";
    case "go":
      return "go";
    case "graphql":
      return "graphql";
    case "groovy":
      return "groovy";
    case "haskell":
      return "haskell";
    case "html":
      return "html";
    case "java":
      return "java";
    case "javascript":
      return "javascript";
    case "json":
    case "jsonc":
      return "json";
    case "julia":
      return "julia";
    case "kotlin":
      return "kotlin";
    case "latex":
      return "latex";
    case "less":
      return "less";
    case "lisp":
      return "lisp";
    case "livescript":
      return "livescript";
    case "lua":
      return "lua";
    case "makefile":
      return "makefile";
    case "markdown":
    case "markup":
      return "markdown";
    case "matlab":
      return "matlab";
    case "mermaid":
      return "mermaid";
    case "nix":
      return "nix";
    case "objective-c":
      return "objective-c";
    case "ocaml":
      return "ocaml";
    case "pascal":
      return "pascal";
    case "perl":
      return "perl";
    case "php":
      return "php";
    case "plaintext":
    case "plain text":
      return "plain text";
    case "powershell":
      return "powershell";
    case "prolog":
      return "prolog";
    case "protobuf":
      return "protobuf";
    case "python":
      return "python";
    case "r":
      return "r";
    case "reason":
      return "reason";
    case "ruby":
      return "ruby";
    case "rust":
      return "rust";
    case "sass":
      return "sass";
    case "scala":
      return "scala";
    case "scheme":
      return "scheme";
    case "scss":
      return "scss";
    case "shell":
      return "shell";
    case "solidity":
      return "solidity";
    case "sql":
      return "sql";
    case "swift":
      return "swift";
    case "typescript":
      return "typescript";
    case "vb":
    case "vb.net":
      return "vb.net";
    case "verilog":
      return "verilog";
    case "vhdl":
      return "vhdl";
    case "visual basic":
      return "visual basic";
    case "webassembly":
      return "webassembly";
    case "xml":
      return "xml";
    case "yaml":
      return "yaml";
    case "typescriptreact":
      return "typescript";
    default:
      return "plain text"; // Fallback for unsupported languages
  }
}
